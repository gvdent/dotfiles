alias gs='git status'
alias gap='git add --patch'
alias gc='git commit'
alias ga='git add'
alias gt='git log --oneline --graph --all --decorate --abbrev-commit'
alias gtb="git log --pretty='%h %<(5,trunc)%an %s' --graph --all --decorate --abbrev-commit"
alias gp='git pull && git push'
alias ds='date +%y%m%d'
alias dc='docker-compose'
alias fixWebcam='sudo killall VDCAssistant'
alias cleanDockerContainers='docker rm $(docker ps -a -q --no-trunc)'
alias cleanDockerImages='docker rmi $(docker images -q --no-trunc)'
alias cleanGitBranches='git branch --merged | grep -v "master\|develop" | xargs git branch -d'
alias packageThisShip='D=$(pwd) && pushd /tmp/ && cp -r ${D} ./ && T=${D##*/} && rm -rf ${T}/.git && tar -czf ${T}.tgz ./${T} && rm -rf ./${T} && popd && mv /tmp/${T}.tgz ./'

function grev() {
  git diff ${1}
  read -p "Revert? " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy] ]];
  then
    git checkout ${1}
  fi
}

function yekpost() {
  file=_posts/$(date +%Y-%m-%d)-${1}.md
  if [ -z ${1} ];
  then
    echo "Please provide a title"
    exit(1)
  else
    echo "---
layout: post
title ${1}
---" > ${file}
    vi ${file}
  fi;
}

function vif() { vi $(find ./ | grep "$@" | head -n1 ) ; }
function lookup() {
  echo "Looking for ${1} with mask: ${2}"
  if [ -z ${2+x} ]; then pattern=''; else pattern=" -name '$2'"; fi

  find . -type f $pattern -print0 | xargs -0 grep -is "$1" --
}

function dockertransfer() {
  setNameAndVersion

  docker save sysunite/${name}:${version} | gzip -c | pv | ssh ${1} docker load
}

function gittag() {
  setNameAndVersion
  echo "Tagging ${version} for ${name}"
  git tag ${version}
}

function dockerpush() {
  setNameAndVersion

  docker push sysunite/${name}:${version}
  gittag
}

function setNameAndVersion() {
  if [ -f "package.json" ]; then
    name=$(grep name package.json | sed -e 's/.*"\(.*\)",/\1/' | head -n 1)
    version=$(grep version package.json | sed -e 's/.*"\(.*\)",/\1/' | head -n 1)
  elif [ -f "pom.xml" ]; then
    name=$(grep artifactId pom.xml | sed -e s'/.*>\([^<]*\)<.*/\1/' | head -n 1)
    version=$(grep '<version' pom.xml | sed -e s'/.*>\([^<]*\)<.*/\1/' | head -n 1)
  else
    name=$(basename $(pwd))
    version=$(git describe --tags | sed -e 's/^v//')
  fi;
}

function dockerize() {
  setNameAndVersion

  docker build -t sysunite/${name}:${version} .
}

function dockerstore() {
  docker save ${1}/${2}:${3} | gzip -c > ${2}-${3}.tgz
}

case "$TERM" in
    screen*) PROMPT_COMMAND='echo -ne "\033k\033\0134"'
esac

alias athome="xrandr --auto --output eDP2 --right-of HDMI2"
alias atnone="xrandr --auto"
alias atcroon="xrandr --auto --output DP7-8 --left-of eDP2 --output DP7-1-8 --left-of DP7-8"
